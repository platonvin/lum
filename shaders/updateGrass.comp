#version 450 core

//basically updates grass "marks" texture.. Simple, unefficient and looks cool  

precision highp int;
precision highp float;

layout(set = 0, binding = 0, rg16f) uniform restrict writeonly image2D state;
layout(set = 0, binding = 1) uniform sampler2D perlin_noise;

layout(push_constant) uniform restrict readonly constants{
    vec2 windDirection, collisionPoint;
    float time;
} pco;

const ivec3 world_size = ivec3(48,48,16);

//honestly it will be like 4 wavegroups i dont think i need to balance it. 
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main(){
    ivec2 pix = ivec2(gl_GlobalInvocationID.xy);
    vec2 pos = (vec2(pix) + 0.5) /16.0;

    vec2 new_direction = vec2(0);

    vec2 wind_direction = vec2(1, 1);
    
    vec2 uv_shift = wind_direction * pco.time / 300.0;
    vec2 noise_uv = (pos) + uv_shift;
    
    new_direction.x = textureGrad(perlin_noise, noise_uv, vec2(1.0/96.0,0), vec2(0)).x;
    new_direction.y = textureGrad(perlin_noise, noise_uv, vec2(0), vec2(0,1.0/96.0)).x;

    imageStore(state, pix, vec4(new_direction,0,0));
}